<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="860" height="600" creationComplete="windowedapplication1_creationCompleteHandler(event)" xmlns:controls="controls.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import spark.effects.Fade;
			include "FacebookGraph.as";
			
			var beginType:Boolean = false; // toggled once when the user clicks the search box
			
			// dummy function for testing
			protected function dummyLogin(event:MouseEvent):void {
				currentState = "loggedin";
			}
			
			protected function searchboxClick(event:MouseEvent):void {
				if(!beginType) {
					searchbox.text = "";
					searchbox.setStyle("color", "#000000");
					beginType = true;
				}
			}
			
			protected function conductSearch(event:KeyboardEvent):void {
				if(event.keyCode == 13) {
					spinner.visible = true;
					searchUser(searchbox.text, 0, function() {
						spinner.visible = false;
						var fd:spark.effects.Fade = new Fade(filtersgroup);
						if(filtersgroup.visible == false) {
							fd.alphaFrom = 0;
							fd.alphaTo = 1;
							fd.duration = 1500;
							fd.play();
						}
						
						// loop through resultset and add configure filters
						var locations:Array = new Array();
						
						trace("users! is "+users);
						for(var i=0;i<users.length;i++) {
							var loc = users.getItemAt(i).location;
							trace(users.getItemAt(i).name+": "+loc+", "+users.getItemAt(i).network);
							if(loc != "") {
								if(!locations[loc]) {
									trace("creating new bucket for key "+loc);
									locations.push(loc);
									locations[loc] = new ArrayList();
								}
								locations[loc].addItem(users.getItemAt(i));
								trace(locations[loc]+" and "+locations.length);
							}
						}
						
						// sort locations by size of list
						var sortedKeys:Array = new Array();
						trace(sortedKeys.length+" "+locations.length);
						while(sortedKeys.length < locations.length) {
							var currMax = (sortedKeys.length == 0) ? 0 : locations[sortedKeys[sortedKeys.length-1]].length;
							var currKey = null;
							for(var loc in locations) {
								if(sortedKeys.indexOf(loc) == -1) {
									if(locations[loc].length > currMax) {
										currMax = locations[loc].length;
										currKey = loc;
									}
								}
							}
							trace("adding "+loc);
							sortedKeys.push(loc);
						}
						trace("sortedkeys: "+sortedKeys);
					}); // end search user callback
				}
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="loggedout"/>
		<s:State name="loggedin"/>
	</s:states>
	<s:Button id="loginoutBtn" right="10" label="Log In" skinClass="skins.FBLogoutButtonSkin" 
			  right.loggedin="10" bottom.loggedin="10" label.loggedin="Log Out"
			  skinClass.loggedin="skins.FBLogoutButtonSkin"
			  right.loggedout="385" top.loggedout="349" label.loggedout="Log In"
			  click.loggedout="login(event)" click.loggedin="logout(event)" 
			  skinClass.loggedout="skins.FBLoginButtonSkin"/>
	<s:Label x="20" y="20"
			 color="#3B5998" fontFamily="Verdana" fontSize="36"
			 fontWeight="bold" text="face"/>
	<s:Label color="#666666" fontFamily="Verdana" fontSize="30" text="+"
			 x="104" y="22"/>
	<s:Label includeIn="loggedout" x="190" y="272" color="#888888" fontFamily="Helvetica Neue Light"
			 fontSize="36" text="You are currently not logged in."/>
	<s:Label includeIn="loggedout" x="363" y="379" color="#AAAAAA" fontFamily="Helvetica Neue Light"
			 fontSize="12" text="Please login to Facebook."/>
	
	<s:TextInput includeIn="loggedin" y="10" right="20" width="692" color="#DDDDDD" id="searchbox"
				 fontFamily="Helvetica Neue Light" fontSize="32" text="Who do you want to find?" click="searchboxClick(event)" keyDown="conductSearch(event)"/>
	<mx:Box y="18" right="40" horizontalAlign="center" verticalAlign="middle" includeIn="loggedin">
		<controls:Spinner id="spinner" tickColor="#cccccc" visible="false"/>
	</mx:Box>
	
	<s:Group id="filtersgroup" visible="false">
		<s:Label includeIn="loggedin" x="12" y="93" fontFamily="Helvetica Neue Light" fontSize="18"
				 text="Filter your results"/>
		<s:Image includeIn="loggedin" x="19" y="124" source="images/graduation-hat.png"/>
		<s:Label includeIn="loggedin" x="37" y="124" fontFamily="Helvetica Neue Light" fontSize="14"
				 text="Education"/>
		<s:Image includeIn="loggedin" x="19" y="271" source="images/marker.png"/>
		<s:Label includeIn="loggedin" x="37" y="270" fontFamily="Helvetica Neue Light" fontSize="14"
				 text="Location"/>
		<s:Image includeIn="loggedin" x="19" y="420" source="images/briefcase.png"/>
		<s:Label includeIn="loggedin" x="37" y="419" fontFamily="Helvetica Neue Light" fontSize="14"
				 text="Workplace"/>
		<s:CheckBox includeIn="loggedin" x="37" y="149" label="Columbia"
					fontFamily="Helvetica Neue Light"/>
		<s:CheckBox includeIn="loggedin" x="37" y="169" label="NYU"
					fontFamily="Helvetica Neue Light"/>
		<s:CheckBox includeIn="loggedin" x="37" y="189" label="Brown"
					fontFamily="Helvetica Neue Light"/>
		<s:ComboBox includeIn="loggedin" x="38" y="216" width="105" fontFamily="Helvetica Neue Light"
					itemRenderer="educationRenderer">
			<mx:ArrayList>
				<fx:String>Cornell</fx:String>
				<fx:String>MIT</fx:String>
				<fx:String>Harvard</fx:String>
				<fx:String>Dartmouth</fx:String>
				<fx:String>Penn</fx:String>
				<fx:String>Yale</fx:String>
				<fx:String>Princeton</fx:String>
			</mx:ArrayList> 
		</s:ComboBox>
		<s:CheckBox includeIn="loggedin" x="37" y="289" label="New York, NY"
					fontFamily="Helvetica Neue Light"/>
		<s:CheckBox includeIn="loggedin" x="37" y="309" label="Boston, MA" fontFamily="Helvetica Neue Light"/>
		<s:CheckBox includeIn="loggedin" x="37" y="329" label="Washington, D.C." fontFamily="Helvetica Neue Light"/>
		<s:ComboBox includeIn="loggedin" x="38" y="356" width="105" fontFamily="Helvetica Neue Light"
					itemRenderer="educationRenderer">
			<mx:ArrayList>
				<fx:String>Cornell</fx:String>
				<fx:String>MIT</fx:String>
				<fx:String>Harvard</fx:String>
				<fx:String>Dartmouth</fx:String>
				<fx:String>Penn</fx:String>
				<fx:String>Yale</fx:String>
				<fx:String>Princeton</fx:String>
			</mx:ArrayList> 
		</s:ComboBox>
		<s:CheckBox includeIn="loggedin" x="37" y="441" label="Microsoft"
					fontFamily="Helvetica Neue Light"/>
		<s:CheckBox includeIn="loggedin" x="37" y="461" label="Google" fontFamily="Helvetica Neue Light"/>
		<s:CheckBox includeIn="loggedin" x="37" y="481" label="Apple" fontFamily="Helvetica Neue Light"/>
		<s:ComboBox includeIn="loggedin" x="38" y="508" width="105" fontFamily="Helvetica Neue Light"
					itemRenderer="educationRenderer">
			<mx:ArrayList>
				<fx:String>Cornell</fx:String>
				<fx:String>MIT</fx:String>
				<fx:String>Harvard</fx:String>
				<fx:String>Dartmouth</fx:String>
				<fx:String>Penn</fx:String>
				<fx:String>Yale</fx:String>
				<fx:String>Princeton</fx:String>
			</mx:ArrayList> 
		</s:ComboBox>
	</s:Group>
</s:WindowedApplication>
